{"version":3,"file":"static/js/276.7fbb2d5a.chunk.js","mappings":";sRAEMA,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAAV,EAEhBC,GAAiBC,EAAAA,EAAAA,IAC5BJ,GACA,SAAAE,GAAS,OAAIA,EAAUG,QAAd,IAEEC,GAA0BF,EAAAA,EAAAA,IACrCJ,GACA,SAAAE,GAAS,OAAIA,EAAUK,SAAd,IAWEC,IATsBJ,EAAAA,EAAAA,IACjCJ,GACA,SAAAE,GAAS,OAAIA,EAAUO,KAAd,KAE6BL,EAAAA,EAAAA,IACtCJ,GACA,SAAAE,GAAS,OAAIA,EAAUQ,UAAd,IAGc,SAAAT,GAAK,OAAIA,EAAMU,MAAV,yCCnBjBC,EAAgBC,EAAAA,GAAAA,IAAH,yHAObC,EAAOD,EAAAA,GAAAA,KAAH,oLCQJE,EAAc,WACzB,OAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MACXlB,GAAWmB,EAAAA,EAAAA,IAAYrB,GAoB7B,OACE,SAACS,EAAD,WACE,UAACE,EAAD,CAAMW,SAAUP,GAhBH,SAAAQ,GACf,IAAMC,EAAa,CACjBC,KAAMF,EAAOE,KACbC,OAAQH,EAAOG,QAGjB,GAAIxB,EAASyB,MAAK,SAAAC,GAAO,OAAIA,EAAQH,OAASD,EAAWC,IAAhC,IACvB,OAAOI,EAAAA,OAAAA,QAAA,UAAkBL,EAAWC,KAA7B,4BAGTN,GAASW,EAAAA,EAAAA,IAAWN,IACpBR,GACD,IAIG,WACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAU,UACV,SAAC,MAAD,kBACMF,EAAS,OAAQ,CAAEiB,UAAU,KADnC,IAEEC,KAAK,OACLC,MAAM,yIAENC,YAAY,gBAEbjB,EAAOQ,OAAQ,0BAAM,+BAExB,UAAC,KAAD,YACE,SAAC,KAAD,UAAU,YACV,SAAC,MAAD,kBACMX,EAAS,SAAU,CAAEiB,UAAU,KADrC,IAEEC,KAAK,MACLC,MAAM,+FAENC,YAAY,8BAEbjB,EAAOS,SAAU,0BAAM,+BAG1B,SAAC,KAAD,CAASM,KAAK,SAAd,SAAuB,oBAgC9B,sBCtGYG,EAAS,WACpB,OACE,0BACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,KAIhB,YCfYC,EAAgBnC,EAAAA,GAAAA,IAAH,2CAIboC,EAAWpC,EAAAA,GAAAA,GAAH,qOAcRqC,EAAkBrC,EAAAA,GAAAA,IAAH,8GAQfsC,EAAatC,EAAAA,GAAAA,EAAH,iEAKVuC,EAAYvC,EAAAA,GAAAA,OAAH,+NCLTwC,EAAc,WACzB,IAAM/B,GAAWC,EAAAA,EAAAA,MACXlB,GAAWmB,EAAAA,EAAAA,IAAYrB,GACvBI,GAAYiB,EAAAA,EAAAA,IAAYlB,GAExBgD,EAXoB,SAACjD,EAAUM,GACrC,cAAON,QAAP,IAAOA,OAAP,EAAOA,EAAUM,QAAO,SAAAoB,GAAO,OAC7BA,EAAQH,KAAK2B,cAAcC,SAAS7C,EAAO4C,cADd,GAGhC,CAO0BE,CAAoBpD,GAD9BmB,EAAAA,EAAAA,IAAYhB,KAG3BkD,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,IA0BJ,OACE,UAAC0B,EAAD,WACGzC,IAAa,SAAC+B,EAAD,KAEd,wBACGsB,MAAMC,QAAQxD,KAAd,OACCiD,QADD,IACCA,OADD,EACCA,EAAkBQ,KAAI,SAAA/B,GAAO,OAC3B,UAACkB,EAAD,YACE,wBAAKlB,EAAQH,QACb,UAACsB,EAAD,YACE,SAACC,EAAD,UAAapB,EAAQF,UACrB,SAACuB,EAAD,CAAWW,QAAS,kBAnCVC,EAmCgCjC,EAAQkC,QAlC9D3C,GAAS4C,EAAAA,EAAAA,IAAcF,IADD,IAAAA,CAmCU,EAApB,UACE,SAAC,MAAD,CAASG,KAAK,cALLpC,EAAQkC,GADI,SAoCtC,YCvGYG,EAAYvD,EAAAA,GAAAA,IAAH,qGAQTwD,EAAiBxD,EAAAA,GAAAA,IAAH,qJAOdyD,EAAQzD,EAAAA,GAAAA,GAAH,8FCRL0D,EAAS,WACpB,IAAMjD,GAAWC,EAAAA,EAAAA,MACXb,GAAac,EAAAA,EAAAA,IAAYhB,GAM/B,OACE,UAACM,EAAD,YACE,SAACwD,EAAD,UAAO,2BACP,SAAC,KAAD,CACEnC,KAAK,OACLP,KAAK,SACLqC,GAAG,SACHO,MAAO9D,EACP2B,YAAY,kBACZoC,SAbmB,SAAAC,GACvB,OAAOpD,GAASqD,EAAAA,EAAAA,GAAUD,EAAME,OAAOJ,OACxC,MAeF,ECrBYK,EAAe,WAO1B,OACE,UAACT,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAO,iBACP,SAACvD,EAAD,QAGF,SAACsD,EAAD,WACE,SAACE,EAAD,OAGF,UAACF,EAAD,YACE,SAACC,EAAD,UAAO,cACP,SAACjB,EAAD,SAIP,EAED,4LCjCavC,EAAOD,EAAAA,GAAAA,KAAH,2VAkBJiE,EAAYjE,EAAAA,GAAAA,MAAH,sIASTkE,EAAWlE,EAAAA,GAAAA,KAAH,iEAKRmE,EAAYnE,EAAAA,GAAAA,MAAH,6UAoBToE,EAAUpE,EAAAA,GAAAA,OAAH","sources":["redux/contacts.selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","pages/LoginPage/LoginPage.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\nexport const selectContactsFilterTerm = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.filterTerm\n);\n\nexport const getFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 540px;\n\n  gap: 12px;\n`;\n\n// export const Input = styled.input`\n//   display: block;\n//   width: 300px;\n//   margin-bottom: 8px;\n// `;\n\n// export const Button = styled.button`\n//   background-color: transparent;\n//   border-radius: 3px;\n//   padding: 4px 8px;\n//   margin-right: 16px;\n//   border: 1px solid black;\n//   &:hover {\n//     color: green;\n//     border: 1px solid green;\n//   }\n// `;\n","// import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contactsReducer';\nimport { selectContacts } from 'redux/contacts.selectors';\n\nimport { useForm } from 'react-hook-form';\nimport { Notify } from 'notiflix';\n\nimport { Form, FormContainer } from './ContactForm.styled';\nimport {\n  FormBtn,\n  FormInput,\n  FormLabel,\n  FormSpan,\n} from 'pages/LoginPage/LoginPage.styled';\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  const onSubmit = values => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      return Notify.failure(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormLabel>\n          <FormSpan>Name</FormSpan>\n          <FormInput\n            {...register('name', { required: true })}\n            type=\"text\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Enter name\"\n          />\n          {errors.name && <span>This field is required</span>}\n        </FormLabel>\n        <FormLabel>\n          <FormSpan>Number</FormSpan>\n          <FormInput\n            {...register('number', { required: true })}\n            type=\"tel\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            placeholder=\"Enter number (123-45-67)\"\n          />\n          {errors.number && <span>This field is required</span>}\n        </FormLabel>\n\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </Form>\n    </FormContainer>\n  );\n\n  //   return (\n  //     <form onSubmit={handleAddContact}>\n  //       <label>\n  //         Name\n  //         <Input\n  //           type=\"text\"\n  //           name=\"contactName\"\n  //           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  //           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  //           required\n  //           placeholder=\"Enter name\"\n  //         />\n  //       </label>\n  //       <label>\n  //         Number\n  //         <Input\n  //           type=\"tel\"\n  //           name=\"contactNumber\"\n  //           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  //           pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n  //           required\n  //           placeholder=\"Enter number (123-45-67)\"\n  //         />\n  //       </label>\n  //       <Button type=\"submit\">Add contact</Button>\n  //     </form>\n  //   );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  margin: 0 40px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 80%;\n  height: 35px;\n  padding: 6px;\n\n  border: 1px solid black;\n  border-radius: 6px;\n  margin-bottom: 10px;\n`;\n\nexport const NumberContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  gap: 12px;\n`;\n\nexport const NumberFont = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n\n  cursor: pointer;\n\n  background-color: transparent;\n  color: black;\n  border: none;\n  transition: all 350ms ease-out;\n\n  &:hover,\n  &:focus {\n    color: #cb4335;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n  getFilter,\n} from 'redux/contacts.selectors';\nimport { deleteContact, fetchContacts } from 'redux/contactsReducer';\n\nimport { Loader } from 'components/Loader/Loader';\n// import { Contact } from 'components/Contact/Contact';\n// import ErrorMessage from 'components/ErrorMessage';\nimport { FaTimes } from 'react-icons/fa';\n// import { MdOutlineRemoveCircleOutline } from 'react-icons/md';\nimport {\n  DeleteBtn,\n  ListContainer,\n  ListItem,\n  NumberContainer,\n  NumberFont,\n} from './ContactList.styled';\n\nconst getFilteredContacts = (contacts, filter) => {\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  // export const ContactList = () => {\n  //   const dispatch = useDispatch();\n\n  //   const contacts = useSelector(selectContacts);\n  //   const isLoading = useSelector(selectContactsIsLoading);\n  //   const error = useSelector(selectContactsError);\n  //   const filterTerm = useSelector(selectContactsFilterTerm);\n\n  //! Отримаємо всі контакти з АПІ\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n  // // console.log('contacts in ContactList: ', contacts);\n\n  // const filteredContacts =\n  //   contacts !== null &&\n  //   contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filterTerm.toLowerCase().trim())\n  //   );\n\n  return (\n    <ListContainer>\n      {isLoading && <Loader />}\n      {/* {error && <ErrorMessage message={error} />} */}\n      <ul>\n        {Array.isArray(contacts) &&\n          filteredContacts?.map(contact => (\n            <ListItem key={contact.id}>\n              <h4>{contact.name}</h4>\n              <NumberContainer>\n                <NumberFont>{contact.number}</NumberFont>\n                <DeleteBtn onClick={() => onDeleteContact(contact.id)}>\n                  <FaTimes size=\"24\" />\n                  {/* <MdOutlineRemoveCircleOutline\n                    className=\"bold-icon\"\n                    size=\"30\"\n                  /> */}\n                </DeleteBtn>\n              </NumberContainer>\n            </ListItem>\n          ))}\n      </ul>\n    </ListContainer>\n  );\n\n  // return (\n  //   <>\n  //     {isLoading && <Loader />}\n  //     {error && <ErrorMessage message={error} />}\n\n  //     <ul>\n  //       {filteredContacts &&\n  //         filteredContacts.map(({ id, name, phone }) => {\n  //           return (\n  //             <li key={id}>\n  //               <Contact id={id} name={name} phone={phone} />\n  //             </li>\n  //           );\n  //         })}\n  //     </ul>\n  //   </>\n  // );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  gap: 40px;\n\n  max-width: 620px;\n  margin: 50px 80px;\n`;\n\nexport const BlockContainer = styled.div`\n  padding: 15px;\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 16px, rgba(0, 0, 0, 0.2) 0px 6px 12px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 auto 22px;\n  font-size: 1.2em;\n\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterReducer';\nimport { getFilter } from 'redux/contacts.selectors';\n\nimport { FormInput } from 'pages/LoginPage/LoginPage.styled';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\nimport { Title } from 'pages/ContactsPage/ContactsPage.styled';\n// import { selectContactsFilterTerm } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterTerm = useSelector(getFilter);\n\n  const handleFilterTerm = event => {\n    return dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Form>\n      <Title>Find contact by name:</Title>\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filterTerm}\n        placeholder=\"Filter contacts\"\n        onChange={handleFilterTerm}\n      />\n    </Form>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { fetchContacts } from 'redux/contactsReducer';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { BlockContainer, Container, Title } from './ContactsPage.styled';\n\nexport const ContactsPage = () => {\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <Container>\n      <BlockContainer>\n        <Title>Add contact</Title>\n        <ContactForm />\n      </BlockContainer>\n\n      <BlockContainer>\n        <Filter />\n      </BlockContainer>\n\n      <BlockContainer>\n        <Title>Contacts</Title>\n        <ContactList />\n      </BlockContainer>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 540px;\n  height: 100%;\n  margin: 0 auto;\n  margin-top: 70px;\n\n  gap: 10px;\n\n  padding: 25px 15px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 16px, rgba(0, 0, 0, 0.2) 0px 6px 12px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 380px;\n  gap: 16px;\n`;\n\nexport const FormSpan = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  width: 280px;\n  height: 32px;\n\n  font-size: 16px;\n  background: transparent;\n\n  box-sizing: border-box;\n  border: 1px solid black;\n  transition: border 0.3s ease;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 2px solid black;\n    outline: none;\n    background: transparent;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  width: 120px;\n  height: 32px;\n  margin-top: 20px;\n\n  font-size: 16px;\n\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 7px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid black;\n    background-color: black;\n    color: white;\n  }\n`;\n"],"names":["selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","getFilter","error","filterTerm","filter","FormContainer","styled","Form","ContactForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useSelector","onSubmit","values","newContact","name","number","find","contact","Notify","addContact","required","type","title","placeholder","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","ListContainer","ListItem","NumberContainer","NumberFont","DeleteBtn","ContactList","filteredContacts","toLowerCase","includes","getFilteredContacts","useEffect","fetchContacts","Array","isArray","map","onClick","contactId","id","deleteContact","size","Container","BlockContainer","Title","Filter","value","onChange","event","setFilter","target","ContactsPage","FormLabel","FormSpan","FormInput","FormBtn"],"sourceRoot":""}