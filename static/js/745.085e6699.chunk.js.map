{"version":3,"file":"static/js/745.085e6699.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts.selectors.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  width: 300px;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border-radius: 3px;\n  padding: 4px 8px;\n  margin-right: 16px;\n  border: 1px solid black;\n  &:hover {\n    color: green;\n    border: 1px solid green;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\nexport const selectContactsFilterTerm = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.filterTerm\n);\n\nexport const getFilter = state => state.filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contactsReducer';\n\nimport { Input, Button } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts.selectors';\nimport { useForm } from 'react-hook-form';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = values => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      return Notify.failure(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Name:</span>\n          <Input\n            {...register('name', { required: true })}\n            type=\"text\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Enter name\"\n          />\n          {errors.name && <span>This field is required</span>}\n        </label>\n        <label>\n          <span>Number:</span>\n          <Input\n            {...register('number', { required: true })}\n            type=\"tel\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            placeholder=\"Enter number (123-45-67)\"\n          />\n          {errors.number && <span>This field is required</span>}\n        </label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n\n  //   return (\n  //     <form onSubmit={handleAddContact}>\n  //       <label>\n  //         Name\n  //         <Input\n  //           type=\"text\"\n  //           name=\"contactName\"\n  //           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  //           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  //           required\n  //           placeholder=\"Enter name\"\n  //         />\n  //       </label>\n  //       <label>\n  //         Number\n  //         <Input\n  //           type=\"tel\"\n  //           name=\"contactNumber\"\n  //           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  //           pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n  //           required\n  //           placeholder=\"Enter number (123-45-67)\"\n  //         />\n  //       </label>\n  //       <Button type=\"submit\">Add contact</Button>\n  //     </form>\n  //   );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n  getFilter,\n} from 'redux/contacts.selectors';\nimport { deleteContact, fetchContacts } from 'redux/contactsReducer';\n\nimport { Loader } from 'components/Loader/Loader';\n// import { Contact } from 'components/Contact/Contact';\n// import ErrorMessage from 'components/ErrorMessage';\nimport { FaTimes } from 'react-icons/fa';\n\nconst getFilteredContacts = (contacts, filter) => {\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  // export const ContactList = () => {\n  //   const dispatch = useDispatch();\n\n  //   const contacts = useSelector(selectContacts);\n  //   const isLoading = useSelector(selectContactsIsLoading);\n  //   const error = useSelector(selectContactsError);\n  //   const filterTerm = useSelector(selectContactsFilterTerm);\n\n  //! Отримаємо всі контакти з АПІ\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n  // // console.log('contacts in ContactList: ', contacts);\n\n  // const filteredContacts =\n  //   contacts !== null &&\n  //   contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filterTerm.toLowerCase().trim())\n  //   );\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {/* {error && <ErrorMessage message={error} />} */}\n      <ul>\n        {Array.isArray(contacts) &&\n          filteredContacts?.map(contact => (\n            <li key={contact.id}>\n              <h4>{contact.name}</h4>\n              <div>\n                <p>{contact.number}</p>\n                <button onClick={() => onDeleteContact(contact.id)}>\n                  <FaTimes />\n                </button>\n              </div>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n\n  // return (\n  //   <>\n  //     {isLoading && <Loader />}\n  //     {error && <ErrorMessage message={error} />}\n\n  //     <ul>\n  //       {filteredContacts &&\n  //         filteredContacts.map(({ id, name, phone }) => {\n  //           return (\n  //             <li key={id}>\n  //               <Contact id={id} name={name} phone={phone} />\n  //             </li>\n  //           );\n  //         })}\n  //     </ul>\n  //   </>\n  // );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterReducer';\nimport { getFilter } from 'redux/contacts.selectors';\n// import { selectContactsFilterTerm } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterTerm = useSelector(getFilter);\n\n  const handleFilterTerm = event => {\n    return dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <p>Find by name:</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filterTerm}\n        onChange={handleFilterTerm}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contactsReducer';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <h2>Add new contact</h2>\n        <ContactForm />\n      </div>\n\n      <div>\n        <h2>Contacts list</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Input","styled","Button","selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","getFilter","error","filterTerm","filter","ContactForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useSelector","useEffect","fetchContacts","onSubmit","values","newContact","name","number","find","contact","Notify","addContact","required","type","title","placeholder","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","ContactList","filteredContacts","toLowerCase","includes","getFilteredContacts","Array","isArray","map","onClick","contactId","id","deleteContact","Filter","value","onChange","event","setFilter","target","ContactsPage"],"sourceRoot":""}