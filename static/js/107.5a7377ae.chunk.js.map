{"version":3,"file":"static/js/107.5a7377ae.chunk.js","mappings":"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","sources":["redux/contacts.selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/Empty.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","pages/LoginPage/LoginPage.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\nexport const selectContactsFilterTerm = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.filterTerm\n);\n\nexport const getFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 540px;\n\n  gap: 12px;\n`;\n\n// export const Input = styled.input`\n//   display: block;\n//   width: 300px;\n//   margin-bottom: 8px;\n// `;\n\n// export const Button = styled.button`\n//   background-color: transparent;\n//   border-radius: 3px;\n//   padding: 4px 8px;\n//   margin-right: 16px;\n//   border: 1px solid black;\n//   &:hover {\n//     color: green;\n//     border: 1px solid green;\n//   }\n// `;\n","// import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contactsReducer';\nimport { selectContacts } from 'redux/contacts.selectors';\n\nimport { useForm } from 'react-hook-form';\nimport { Notify } from 'notiflix';\n\nimport { Form, FormContainer } from './ContactForm.styled';\nimport {\n  FormBtn,\n  FormInput,\n  FormLabel,\n  FormSpan,\n} from 'pages/LoginPage/LoginPage.styled';\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  const onSubmit = values => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      return Notify.failure(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormLabel>\n          <FormSpan>Name</FormSpan>\n          <FormInput\n            {...register('name', { required: true })}\n            type=\"text\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Enter name\"\n          />\n          {errors.name && <span>This field is required</span>}\n        </FormLabel>\n        <FormLabel>\n          <FormSpan>Number</FormSpan>\n          <FormInput\n            {...register('number', { required: true })}\n            type=\"tel\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            placeholder=\"Enter number (123-45-67)\"\n          />\n          {errors.number && <span>This field is required</span>}\n        </FormLabel>\n\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </Form>\n    </FormContainer>\n  );\n\n  //   return (\n  //     <form onSubmit={handleAddContact}>\n  //       <label>\n  //         Name\n  //         <Input\n  //           type=\"text\"\n  //           name=\"contactName\"\n  //           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  //           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  //           required\n  //           placeholder=\"Enter name\"\n  //         />\n  //       </label>\n  //       <label>\n  //         Number\n  //         <Input\n  //           type=\"tel\"\n  //           name=\"contactNumber\"\n  //           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  //           pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n  //           required\n  //           placeholder=\"Enter number (123-45-67)\"\n  //         />\n  //       </label>\n  //       <Button type=\"submit\">Add contact</Button>\n  //     </form>\n  //   );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsIsLoading } from 'redux/contacts.selectors';\nimport { deleteContact } from 'redux/contactsReducer';\n\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Link, Paper } from '@mui/material';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectContactsIsLoading);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215)\n      .toString(16)\n      .padStart(6, 0)}`;\n  }\n\n  return (\n    <ListItem\n      components={Paper}\n      secondaryAction={\n        <LoadingButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          // onClick={onDeleteContact}\n          onClick={() => onDeleteContact(id)}\n          title={`Delete ${name}`}\n          loading={isLoading}\n          variant=\"outlined\"\n          color=\"success\"\n        >\n          <DeleteIcon />\n        </LoadingButton>\n      }\n      // sx={{ borderBottom: '1px solid lightGreen' }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ backgroundColor: getRandomHexColor() }}>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Link\n            href={'tel:' + number}\n            underline=\"hover\"\n            sx={{ color: 'green' }}\n          >\n            {number}\n          </Link>\n        }\n      />\n    </ListItem>\n  );\n};\n\n// const onDeleteContact = contactId => {\n//   dispatch(deleteContact(contactId));\n// };\n\n//  <ListItem key={contact.id}>\n//   <h4>{contact.name}</h4>\n//   <NumberContainer>\n//     <NumberFont>{contact.number}</NumberFont>\n//     <DeleteBtn onClick={() => onDeleteContact(contact.id)}>\n//       <FaTimes size=\"24\" />\n//       {/* <MdOutlineRemoveCircleOutline\n//                     className=\"bold-icon\"\n//                     size=\"30\"\n//       /> */}\n//     </DeleteBtn>\n//   </NumberContainer>\n// </ListItem>;\n","import styled from 'styled-components';\n\nexport const ListContainer = styled.div`\n  margin: 0 40px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 80%;\n  height: 35px;\n  padding: 6px;\n\n  border: 1px solid black;\n  border-radius: 6px;\n  margin-bottom: 10px;\n`;\n\nexport const NumberContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  gap: 12px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 auto 22px;\n  font-size: 1.2em;\n\n  text-align: center;\n`;\n\nexport const NumberFont = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n\n  cursor: pointer;\n\n  background-color: transparent;\n  color: black;\n  border: none;\n  transition: all 350ms ease-out;\n\n  &:hover,\n  &:focus {\n    color: #cb4335;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 540px;\n  margin-bottom: 40px;\n  gap: 12px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 auto 5px;\n  font-size: 1.2em;\n\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterReducer';\nimport { getFilter } from 'redux/contacts.selectors';\n\nimport { FormInput } from 'pages/LoginPage/LoginPage.styled';\n// import { Form } from 'components/ContactForm/ContactForm.styled';\nimport { Form, Title } from './Filter.styled';\n// import { selectContactsFilterTerm } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterTerm = useSelector(getFilter);\n\n  const handleFilterTerm = event => {\n    return dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Form>\n      <Title>Find contact by name:</Title>\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filterTerm}\n        placeholder=\"Filter contacts\"\n        onChange={handleFilterTerm}\n      />\n    </Form>\n  );\n};\n","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Empty = () => {\n  return (\n    <Box sx={{ textAlign: 'center', marginTop: '24px', color: 'green' }}>\n      <Typography variant=\"h6\">The contact list is empty! </Typography>\n    </Box>\n  );\n};\n\nexport default Empty;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n  getFilter,\n} from 'redux/contacts.selectors';\nimport { fetchContacts } from 'redux/contactsReducer';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Contact } from 'components/Contact/Contact';\n// import ErrorMessage from 'components/ErrorMessage';\n\n// import { FaTimes } from 'react-icons/fa';\n// import { MdOutlineRemoveCircleOutline } from 'react-icons/md';\nimport { ListContainer, Title } from './ContactList.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport Empty from './Empty';\n\nconst getFilteredContacts = (contacts, filter) => {\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // export const ContactList = () => {\n  //   const dispatch = useDispatch();\n\n  //   const contacts = useSelector(selectContacts);\n  //   const isLoading = useSelector(selectContactsIsLoading);\n  //   const error = useSelector(selectContactsError);\n  //   const filterTerm = useSelector(selectContactsFilterTerm);\n\n  // const filteredContacts =\n  //   contacts !== null &&\n  //   contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filterTerm.toLowerCase().trim())\n  //   );\n\n  return (\n    <ListContainer>\n      {isLoading && <Loader />}\n      {!isLoading && contacts?.length > 1 && <Filter />}\n      {!isLoading && contacts?.length < 1 && <Empty />}\n      {/* {error && <ErrorMessage message={error} />} */}\n      <ul>\n        {Array.isArray(contacts) && contacts.length > 0 && (\n          <>\n            <Title>Contacts</Title>\n\n            {filteredContacts?.map(contact => (\n              <Contact\n                id={contact.id}\n                key={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            ))}\n          </>\n        )}\n      </ul>\n    </ListContainer>\n  );\n\n  // {\n  //   Array.isArray(contacts) &&\n  //     filteredContacts?.map(contact => (\n  //       <Contact\n  //         id={contact.id}\n  //         key={contact.id}\n  //         name={contact.name}\n  //         number={contact.number}\n  //       />\n  //     ));\n  // }\n\n  // return (\n  //   <>\n  //     {isLoading && <Loader />}\n  //     {error && <ErrorMessage message={error} />}\n\n  //     <ul>\n  //       {filteredContacts &&\n  //         filteredContacts.map(({ id, name, phone }) => {\n  //           return (\n  //             <li key={id}>\n  //               <Contact id={id} name={name} phone={phone} />\n  //             </li>\n  //           );\n  //         })}\n  //     </ul>\n  //   </>\n  // );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  gap: 40px;\n\n  max-width: 620px;\n  margin: 50px 80px;\n`;\n\nexport const BlockContainer = styled.div`\n  padding: 15px;\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 16px, rgba(0, 0, 0, 0.2) 0px 6px 12px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 auto 22px;\n  font-size: 1.2em;\n\n  text-align: center;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { BlockContainer, Container, Title } from './ContactsPage.styled';\n\nexport const ContactsPage = () => {\n  return (\n    <Container>\n      <BlockContainer>\n        <Title>Add contact</Title>\n        <ContactForm />\n      </BlockContainer>\n\n      <BlockContainer>\n        <ContactList />\n      </BlockContainer>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  max-width: 540px;\n  height: 100%;\n  margin: 0 auto;\n  margin-top: 70px;\n\n  gap: 10px;\n\n  padding: 25px 15px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 16px, rgba(0, 0, 0, 0.2) 0px 6px 12px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 380px;\n  gap: 16px;\n`;\n\nexport const FormSpan = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  width: 280px;\n  height: 32px;\n\n  font-size: 16px;\n  background: transparent;\n\n  box-sizing: border-box;\n  border: 1px solid black;\n  transition: border 0.3s ease;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    border: 2px solid black;\n    outline: none;\n    background: transparent;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  width: 120px;\n  height: 32px;\n  margin-top: 20px;\n\n  font-size: 16px;\n\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 7px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border: 1px solid black;\n    background-color: black;\n    color: white;\n  }\n`;\n"],"names":["selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","getFilter","error","filterTerm","filter","FormContainer","styled","Form","ContactForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useSelector","onSubmit","values","newContact","name","number","find","contact","Notify","addContact","required","type","title","placeholder","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Contact","id","ListItem","components","Paper","secondaryAction","LoadingButton","edge","onClick","deleteContact","onDeleteContact","loading","variant","Delete","ListItemAvatar","Avatar","sx","backgroundColor","Math","floor","random","toString","padStart","Person","ListItemText","primary","secondary","Link","href","underline","ListContainer","Title","Filter","value","onChange","event","setFilter","target","Box","textAlign","marginTop","Typography","ContactList","filteredContacts","toLowerCase","includes","getFilteredContacts","useEffect","fetchContacts","length","Array","isArray","map","Container","BlockContainer","ContactsPage","FormLabel","FormSpan","FormInput","FormBtn"],"sourceRoot":""}